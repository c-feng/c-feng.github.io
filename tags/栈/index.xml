<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>栈 on feng</title>
    <link>https://c-feng.github.io/tags/%E6%A0%88/</link>
    <description>Recent content in 栈 on feng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 10 Aug 2020 21:45:56 +0800</lastBuildDate>
    
	<atom:link href="https://c-feng.github.io/tags/%E6%A0%88/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>剑指offer 面试题34:二叉树中和为某一值的路径</title>
      <link>https://c-feng.github.io/post/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87offer%E9%9D%A2%E8%AF%95%E9%A2%9834%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E4%B8%80%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84/</link>
      <pubDate>Mon, 10 Aug 2020 21:45:56 +0800</pubDate>
      
      <guid>https://c-feng.github.io/post/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87offer%E9%9D%A2%E8%AF%95%E9%A2%9834%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E4%B8%80%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84/</guid>
      <description>题目：输入一棵二叉树和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。 二叉</description>
    </item>
    
    <item>
      <title>剑指offer 面试题32_3:之字形打印二叉树</title>
      <link>https://c-feng.github.io/post/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87offer%E9%9D%A2%E8%AF%95%E9%A2%9832_3%E4%B9%8B%E5%AD%97%E5%BD%A2%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Mon, 10 Aug 2020 13:56:57 +0800</pubDate>
      
      <guid>https://c-feng.github.io/post/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87offer%E9%9D%A2%E8%AF%95%E9%A2%9832_3%E4%B9%8B%E5%AD%97%E5%BD%A2%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>题目：请实现一个函数按照之字形顺序打印二叉树，即第一行按照从左到右的顺 序打印，第二层按照从右到左的顺序打印，第三行再按照从左到右的顺序打印，</description>
    </item>
    
    <item>
      <title>剑指offer 面试题31:栈的压入弹出序列</title>
      <link>https://c-feng.github.io/post/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87offer%E9%9D%A2%E8%AF%95%E9%A2%9831%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sun, 09 Aug 2020 11:29:45 +0800</pubDate>
      
      <guid>https://c-feng.github.io/post/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87offer%E9%9D%A2%E8%AF%95%E9%A2%9831%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97/</guid>
      <description>题目：输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是 否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如序列1、2、3、</description>
    </item>
    
    <item>
      <title>剑指offer 面试题30:包含min函数的栈</title>
      <link>https://c-feng.github.io/post/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87offer%E9%9D%A2%E8%AF%95%E9%A2%9830%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/</link>
      <pubDate>Sun, 09 Aug 2020 10:55:39 +0800</pubDate>
      
      <guid>https://c-feng.github.io/post/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87offer%E9%9D%A2%E8%AF%95%E9%A2%9830%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/</guid>
      <description>题目：定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的min 函数。在该栈中，调用min、push及pop的时间复杂度都是O(1)</description>
    </item>
    
  </channel>
</rss>